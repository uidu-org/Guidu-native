// @ts-nocheck
import fs from 'fs'
import path from 'path'

import { registry } from '../registry/registry'
import { registrySchema } from '../registry/schema'

const REGISTRY_PATH = path.join(process.cwd(), '__registry__')

const result = registrySchema.safeParse(registry)

if (!result.success) {
  console.error(result.error)
  process.exit(1)
}

// ----------------------------------------------------------------------------
// Build __registry__/index.tsx.
// ----------------------------------------------------------------------------
let index = `// @ts-nocheck
// This file is autogenerated by scripts/build.ts
// Do not edit this file directly.
import * as React from "react"

export const Index: Record<string, any> = {
`

for (const item of result.data) {
  index += `  "${item.name}": {`

  const resolveFiles = item.files.map((file) => `${file}`)

  const type = item.type.split(':')[1]
  index += `
    name: "${item.name}",
    type: "${item.type}",
    egistryDependencies: ${JSON.stringify(item.registryDependencies)},
    component: React.lazy(() => import("@/docs/components/${type}/${item.name}")),
    files: [${resolveFiles.map((file) => `"${file}"`)}],
  },`
}

index += `
}
`

// Write index.tsx file.
fs.writeFileSync(path.join(REGISTRY_PATH, 'index.tsx'), index)

// ----------------------------------------------------------------------------
// Build registry/index.json.
// ----------------------------------------------------------------------------
const registryJson = JSON.stringify(result.data, null, 2)
fs.writeFileSync(path.join(REGISTRY_PATH, 'index.json'), registryJson, 'utf8')

console.log('âœ… Done!')
